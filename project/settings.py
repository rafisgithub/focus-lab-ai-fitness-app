"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import datetime
import os
from pathlib import Path

from django.templatetags.static import static
from django.urls import reverse_lazy
from django.utils.translation import gettext_lazy as _
from dotenv import load_dotenv
import os

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-_(4sk(m(!$$xxvz)-7!b7ibkz&2sotl0#=hv8+e*_^__qzgs18"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']  # Accept all hosts temporarily

CORS_ALLOW_ALL_ORIGINS = True

CSRF_TRUSTED_ORIGINS = [
    "https://*.ngrok-free.app",
    "http://localhost:5173",
    "http://127.0.0.1:5173",
]




# Application definition

INSTALLED_APPS = [
    "corsheaders",
    "modeltranslation",
    "unfold",  # before django.contrib.admin
    "unfold.contrib.filters",  # optional, if special filters are needed
    "unfold.contrib.forms",  # optional, if special form elements are needed
    "unfold.contrib.inlines",  # optional, if special inlines are needed
    "unfold.contrib.import_export",  # optional, if django-import-export package is used
    "unfold.contrib.guardian",  # optional, if django-guardian package is used
    "unfold.contrib.simple_history",  # optional, if django-simple-history package is used
    "django.contrib.admin",  # required
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "rest_framework_simplejwt",
    "apps.seeders",
    "apps.users",
    "apps.cms",
    "apps.subscriptions",
    "django_select2",
    "import_export",
    "apps.ai_helper",
    "apps.dashboard",
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    'whitenoise.middleware.WhiteNoiseMiddleware',

]

ROOT_URLCONF = "project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "project.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGES = (
    ('en', 'English'),
    ('de', 'German'),  # de = Deutsch
)

# LANGUAGE_CODE = 'de'  # Default language (German in your case)


LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_ROOT = BASE_DIR / 'staticfiles'

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"



# auth user model
AUTH_USER_MODEL = "users.User"


# Rest framework
REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES": ("rest_framework.permissions.IsAuthenticated",),
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "EXCEPTION_HANDLER": "apps.utils.custom_exception.custom_exception_handler",

}


# JWT
SIMPLE_JWT = {
     'ACCESS_TOKEN_LIFETIME': datetime.timedelta(days=1),
     'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=1),
}


# email

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # SMTP server host
EMAIL_PORT = 587  # SMTP server port (587 for TLS, 465 for SSL)
EMAIL_USE_TLS = True  # True for TLS, False for SSL
EMAIL_HOST_USER = 'mainbsl4@gmail.com'  # SMTP server username
EMAIL_HOST_PASSWORD = 'nmwk umma atdu sosv'  # SMTP server password
EMAIL_USE_SSL = False  # Set to True if using SSL
DEFAULT_FROM_EMAIL = 'your_email@example.com'




UNFOLD = {
    "SITE_TITLE": "Poseidon",
    "SITE_HEADER": "Appears in sidebar at the top",
    "SITE_SUBHEADER": "Appears under SITE_HEADER",
    "DASHBOARD_CALLBACK": "apps.dashboard.views.dashboard_callback",
    "SITE_DROPDOWN": [
        {
            "icon": "diamond",
            "title": _("My site"),
            "link": "https://clevercv.netlify.app",
            "target": "_blank",
        },
        # ...
    ],
    "SITE_URL": "/",
    # "SITE_ICON": lambda request: static("icon.svg"),  # both modes, optimise for 32px height
    "SITE_ICON": {
        "light": lambda request: static("icon-light.svg"),  # light mode
        "dark": lambda request: static("icon-dark.svg"),  # dark mode
    },
    # "SITE_LOGO": lambda request: static("logo.svg"),  # both modes, optimise for 32px height
    "SITE_LOGO": {
        "light": lambda request: static("logo-light.svg"),  # light mode
        "dark": lambda request: static("logo-dark.svg"),  # dark mode
    },
    "SITE_SYMBOL": "speed",  # symbol from icon set
    "SITE_FAVICONS": [
        {
            "rel": "icon",
            "sizes": "32x32",
            "type": "image/svg+xml",
            "href": lambda request: static("favicon.svg"),
        },
    ],
    "SHOW_HISTORY": True, # show/hide "History" button, default: True
    "SHOW_VIEW_ON_SITE": True, # show/hide "View on site" button, default: True
    "SHOW_BACK_BUTTON": False, # show/hide "Back" button on changeform in header, default: False
  
    # "THEME": "light",
    "LOGIN": {
        "image": lambda request: static("sample/login-bg.jpg"),
        "redirect_after": lambda request: reverse_lazy("admin:APP_MODEL_changelist"),
    },

    "BORDER_RADIUS": "6px",
   
   
    "SIDEBAR": {
        "show_search": False,  # Search in applications and models names
        "show_all_applications": False,  # Dropdown with all applications and models
        "navigation": [
            {
                "title": _("User Management"),
                "separator": True,  # Top border
                "collapsible": True,  # Collapsible group of links
                "items": [
                    {
                        "title": _("Dashboard"),
                        "icon": "dashboard",  # Supported icon set: https://fonts.google.com/icons
                        "link": reverse_lazy("admin:index"),
                        "permission": lambda request: request.user.is_superuser,
                    },
                    {
                        "title": _("Users"),
                        "icon": "people",
                        "link": reverse_lazy("admin:users_user_changelist"),
                    },
                    {
                        "title": _("FeatureLeads"),
                        "icon": "social_leaderboard",
                        "link": reverse_lazy("admin:cms_upcomingfeatureinteresteduser_changelist"),
                    }
                ],
            },
            {
                "title": _("CMS Management"),
                "separator": True,  # Top border
                "collapsible": True,  # Collapsible group of links
                "items": [

                    {
                        "title": _("Hero Sections"),
                        "icon": "rewarded_ads",  # Supported icon set: https://fonts.google.com/icons
                        "link": reverse_lazy("admin:cms_herosection_changelist"),
                    },
                    {
                        "title": _("Brands"),
                        "icon": "branding_watermark",  # Supported icon set: https://fonts.google.com/icons
                        "link": reverse_lazy("admin:cms_brand_changelist"),
                    },
                    {
                        "title": _("Features"),
                        "icon": "star",
                        "link": reverse_lazy("admin:cms_feature_changelist"),
                    },
                    {
                        "title": _("How It Works Features"),
                        "icon": "info",
                        "link": reverse_lazy("admin:cms_howitworkfeature_changelist"),
                    },
                    {
                        "title": _("How It Works"),
                        "icon": "how_to_reg",
                        "link": reverse_lazy("admin:cms_howitwork_changelist"),
                    },
                    {
                        "title": _("Testimonials"),
                        "icon": "rate_review",
                        "link": reverse_lazy("admin:cms_testimonial_changelist")
                    },
                    {
                        "title": _("Benefits"),
                        "icon": "check_circle",
                        "link": reverse_lazy("admin:cms_benefit_changelist"),
                    },
                    {
                        "title": _("FAQs"),
                        "icon": "help",
                        "link": reverse_lazy("admin:cms_faq_changelist"),
                    },
                    {
                        "title": _("Pages"),
                        "icon": "description",
                        "link": reverse_lazy("admin:cms_page_changelist"),
                    },
                                    {
                        "title": _("Interview Coach Section"),
                        "icon": "eyeglasses",
                        "link": reverse_lazy("admin:cms_interviewcoachsection_changelist"),
                    },
                    {
                        "title": _("Global CTA"),
                        "icon": "call_to_action",
                        "link": reverse_lazy("admin:cms_globalcta_changelist"),
                    },
                    {
                        "title": _("Footer"),
                        "icon": "page_footer",
                        "link": reverse_lazy("admin:cms_footer_changelist"),
                    },

                ],
            },
            {
                "title": _("Subscription Management"),
                "separator": True,  # Top border
                "collapsible": True,  # Collapsible group of links
                "items": [

                    {
                        "title": _("Features"),
                        "icon": "star",  # Supported icon set: https://fonts.google.com/icons
                        "link": reverse_lazy("admin:subscriptions_feature_changelist"),
                    },
                    {
                        "title": _("Packages"),
                        "icon": "package",  # Supported icon set: https://fonts.google.com/icons
                        "link": reverse_lazy("admin:subscriptions_package_changelist"),
                    },
                    {
                        "title" : _("Subscriptions"),
                        "icon": "subscriptions",  # Supported icon set: https://fonts.google.com/icons
                        "link": reverse_lazy("admin:subscriptions_subscription_changelist"),
                    }
                ],
            },
           
            {
                "title": _("Payment History"),
                "separator": True,  # Top border
                "collapsible": True,  # Collapsible group of links
                "items": [
                    {
                        "title": _("Payments"),
                        "icon": "payments",  # Supported icon set: https://fonts.google.com/icons
                        "link": reverse_lazy("admin:subscriptions_paymenthistory_changelist"),
                    },
                    
                ],
            },
           
            {
                "title": _("Users Contacted Us"),
                "separator": True,  # Top border
                "collapsible": True,  # Collapsible group of links
                "items": [
                    {
                        "title": _("Contact List"),
                        "icon": "list",
                        "link": reverse_lazy("admin:contacts_contact_changelist"),
                        "badge": "apps.contacts.admin_utils.unread_contact_badge",
                        "permission": lambda request: request.user.is_superuser,
                    },
                   
                ],
            },
            {
                "title": _("AI Helper"),
                "separator": True,  # Top border
                "collapsible": True,  # Collapsible group of links
                "items": [
                    {
                        "title": _("Suggested Questions"),
                        "icon": "list",
                        "link": reverse_lazy("admin:ai_helper_suggestedquestion_changelist"),
              
                    },
                    {
                        "title": _("Chat History"),
                        "icon": "list",
                        "link": reverse_lazy("admin:ai_helper_chathistory_changelist"),

                    },
                   
                ],
            },
           
        ],
    },
  
}

OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')




BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'django_app.log'), # This defines the log file path
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'your_app_name': { # Example for a custom app logger
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}